Класс: именованная сущность из предметной области, возможно, имеющая предка (суперкласс),
определенная как набор полей и методов.

Поле: именованное свойство с определенным типом, которое может, в частности, ссылаться на другой объект (см. композиция).

Метод: именованная функция или процедура, с параметрами или без них, реализующая какое-то поведение класса.

Наследование: класс может унаследовать — использовать по умолчанию — поля и методы своего предка.
Наследование транзитивно: класс может наследоваться от другого класса, который наследуется от третьего,
и так далее вплоть до базового класса (обычно — Object), возможно, неявного.
Наследник может переопределить какие-то методы и поля чтобы изменить поведение по умолчанию.

Композиция: если поле у нас имеет тип Класс, оно может содержать ссылку на другой объект этого класса,
 создавая таким образом связь между двумя объектами.
 Не влезая в дебри различий между простой ассоциацией, агрегированием и композицией, давайте "на пальцах" определим:
 композиция — это когда один объект предоставляет другому свою функциональность частично или полностью.

Инкапсуляция: мы обращаемся с объектами как с единой сущностью, а не как с набором отдельных полей и методов,
тем самым скрываем и защищаем реализацию класса. Если клиентский код не знает ничего, кроме публичного интерфейса,
 он не может зависеть от деталей реализации.
